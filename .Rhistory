shiny::runApp()
runApp()
install.packages("shiny.semantic")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shiny.fluent")
library(shiny.fluent)
remotes::install_github("Appsilon/shiny.fluent")
install_github("Appsilon/shiny.fluent")
remotes::install_github("Appsilon/shiny.react")
install.packages("remotes")
remotes::install_github("Appsilon/shiny.react")
library(shiny.fluent)
remotes::install_github("Appsilon/shiny.fluent")
library(shiny.fluent)
shiny.fluent::runExample("demo")
remotes::install_github("Appsilon/shiny.react")
library(shiny.react)
remotes::install_github("Appsilon/shiny.fluent")
remotes::install_github("Appsilon/shiny.fluent")
remotes::install_github("Appsilon/shiny.fluent", dependencies = TRUE )
library(shiny.fluent)
remotes::install_github("Appsilon/shiny.fluent")
shiny::runApp()
runApp()
shiny.fluent::runExample("demo")
shiny.fluent::runExample("dashboard")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinythemes)\
library(shinythemes)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
load("~/R/shinyapp/www/my_theme.css")
runApp()
runApp()
runApp()
runApp()
setwd("~/R/shinyapp")
runApp()
shiny::runApp()
install.packages(shiny)
install.packages(shinyapp)
install.packages(shiny)
install.packages("shiny")
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fluentPeople %>% glimpse()
fluentSalesDeals %>% glimpse()
runApp()
runApp()
details_list_columns <- tibble(
fieldName = c("rep_name", "date", "deal_amount", "client_name", "city", "is_closed"),
name = c("Sales rep", "Close date", "Amount", "Client", "City", "Is closed?"),
key = fieldName)
runApp()
library(shiny)
library(shiny.fluent)
library(dplyr)
library(ggplot2)
library(glue)
library(leaflet)
library(plotly)
library(sass)
library(shiny)
library(shiny.fluent)
library(shiny.router)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
